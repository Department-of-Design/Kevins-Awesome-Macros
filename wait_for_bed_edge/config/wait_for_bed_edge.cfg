[gcode_macro WAIT_FOR_BED_EDGE_TEMP]
gcode:
    {% set bound_percentage = params.BOUND | int | default(50) %}
    {% set MINIMUM_TEMP_THRESHOLD = params.MINIMUM_TEMP_THRESHOLD | default(0.8) | float %}
    {% set BED_TEMP = params.BED | default(60) | int %}
    {% set MINIMUM_TEMP_THRESHOLD = (MINIMUM_TEMP_THRESHOLD * BED_TEMP) | int %}
    
    {% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}    # Get all object points
    {% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}                          # Object x min
    {% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}                          # Object x max
    {% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}                          # Object y min
    {% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}                          # Object y max

    {% set x_min = (printer.toolhead.axis_maximum.x / 2) - (printer.toolhead.axis_maximum.x / 2 * (bound_percentage / 100)) %}
    {% set x_max = (printer.toolhead.axis_maximum.x / 2) + (printer.toolhead.axis_maximum.x / 2 * (bound_percentage / 100)) %}
    {% set y_min = (printer.toolhead.axis_maximum.y / 2) - (printer.toolhead.axis_maximum.y / 2 * (bound_percentage / 100)) %}
    {% set y_max = (printer.toolhead.axis_maximum.y / 2) + (printer.toolhead.axis_maximum.y / 2 * (bound_percentage / 100)) %}

    {% if purge_x_min < x_min or purge_x_max > x_max or purge_y_min < y_min or purge_y_max > y_max %}
      { action_respond_info("Print bigger than center of bed, waiting for edge to reach %dÂ°C." % MINIMUM_TEMP_THRESHOLD) }
      M140 S{BED_TEMP}
      TEMPERATURE_WAIT SENSOR="temperature_sensor bed_edge" MINIMUM={MINIMUM_TEMP_THRESHOLD}
    {% else %}
      RESPOND MSG="Print smaller than center of bed, not waiting. Regularly heating."
      { action_respond_info("Print smaller than center of bed, not waiting. Regularly heating." % BED_TEMP) }
      M190 S{BED_TEMP}
    {% endif %}